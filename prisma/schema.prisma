generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("NUXT_DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String?
  passwordHash  String?
  googleId      String?
  facebookId    String?
  profile       Json?
  status        Int       @default(1)
  createdAt     DateTime  @default(now())
  lastUpdatedAt DateTime?
}

model File {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String   @unique
  extention  String?
  type       String
  uploadedAt DateTime @default(now())
}

model Log {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  time    DateTime @default(now())
  message String
  status  Int
}

model Category {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  code          String
  name          Json
  alias         Json
  product       Product[]
  status        Int       @default(1) // 1. Sử dụng
  createdBy     String
  createdAt     DateTime  @default(now())
  lastUpdatedAt DateTime?
  lastUpdatedBy String?
}

model Product {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          Json
  alias         Json
  description   Json
  price         Float
  stock         Stock[]
  Category      Category?       @relation(fields: [categoryId], references: [id])
  categoryId    String?         @db.ObjectId
  Order         Order[]
  PurchaseOrder PurchaseOrder[]
  status        Int             @default(1)
  createdBy     String
  createdAt     DateTime        @default(now())
  lastUpdatedAt DateTime?
  lastUpdatedBy String?
}

model Stock {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  product       Product   @relation(fields: [productId], references: [id])
  productId     String    @db.ObjectId
  warehouse     Warehouse @relation(fields: [warehouseId], references: [id])
  warehouseId   String    @db.ObjectId
  quantity      Int
  status        Int       @default(1)
  createdBy     String
  createdAt     DateTime  @default(now())
  lastUpdatedAt DateTime?
  lastUpdatedBy String?
}

model Warehouse {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  location      String
  maxCapacity   Int
  stock         Stock[]
  status        Int       @default(1)
  createdBy     String
  createdAt     DateTime  @default(now())
  lastUpdatedAt DateTime?
  lastUpdatedBy String?
}

model Supplier {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  contactInfo    String?
  purchaseOrders PurchaseOrder[]
  status         Int             @default(1)
  createdBy      String
  createdAt      DateTime        @default(now())
  lastUpdatedAt  DateTime?
  lastUpdatedBy  String?
}

model Order {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  product       Product   @relation(fields: [productId], references: [id])
  productId     String    @db.ObjectId
  quantity      Int
  status        Int       @default(1) // trạng thái đơn hàng: "pending", "shipped", "delivered"
  createdBy     String
  createdAt     DateTime  @default(now())
  lastUpdatedAt DateTime?
  lastUpdatedBy String?
}

model PurchaseOrder {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId String   @db.ObjectId
  product    Product  @relation(fields: [productId], references: [id])
  productId  String   @db.ObjectId
  quantity   Int
  status     Int      @default(1) // trạng thái: "ordered", "received"
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
